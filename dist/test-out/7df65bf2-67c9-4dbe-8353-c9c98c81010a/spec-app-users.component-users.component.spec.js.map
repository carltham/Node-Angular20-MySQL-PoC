{
  "version": 3,
  "sources": ["angular:jit:template:src/app/users.component/users.component.html", "angular:jit:style:src/app/users.component/users.component.scss", "src/app/users.component/users.component.ts", "src/app/users.component/users.component.spec.ts"],
  "sourcesContent": ["<h2>Users</h2>\n@if (loading) {\n<p>Loading\u2026</p>\n}\n<table>\n  <!--\n  <li *ngFor=\"let u of users()\">\n    {{ u.name }} <small>({{ u.email }})</small>\n  </li>\n  -->\n  @for (user of users; track user.name) {\n  <tr>\n    <td> Name : {{ user.name }} </td>\n    <td> - </td>\n    <td><small>(Email : {{ user.email }})</small></td>\n  </tr>\n  } @empty {\n  <tr>\n    <td>There are no items.</td>\n  </tr>\n  }\n</table>", "/* src/app/users.component/users.component.scss */\n/*# sourceMappingURL=users.component.css.map */\n", "import { CommonModule } from \"@angular/common\";\nimport { Component, OnChanges, SimpleChanges } from \"@angular/core\";\n\nimport { UserDTO } from \"../domain/user\";\nimport { UserAPIService } from \"../services/user-api.service\";\n@Component({\n  selector: \"app-users.component\",\n  imports: [CommonModule],\n  templateUrl: \"./users.component.html\",\n  styleUrl: \"./users.component.scss\",\n})\nexport class UsersComponent implements OnChanges {\n  users: UserDTO[] = [];\n  loading = true;\n\n  constructor(private userAPIService: UserAPIService) {}\n  ngOnChanges(changes: SimpleChanges): void {\n    this.userAPIService.getAll().subscribe({\n      next: (list: any) => {\n        this.users = list;\n        console.log(\"UsersComponent: users = \", this.users);\n      },\n      error: (err: any) => console.error(err),\n      complete: () => (this.loading = false),\n    });\n  }\n}\n", "import { ComponentFixture, TestBed } from \"@angular/core/testing\";\n\nimport { HttpClient } from \"@angular/common/http\";\nimport { HttpTestingController } from \"@angular/common/http/testing\";\nimport { UserAPIService } from \"../services/user-api.service\";\nimport { UsersComponent } from \"./users.component\";\n\ndescribe(\"UsersComponent\", () => {\n  let component: UsersComponent;\n  let fixture: ComponentFixture<UsersComponent>;\n  let httpClient: HttpClient;\n  let httpTestingController: HttpTestingController;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      imports: [UsersComponent],\n      providers: [UserAPIService],\n    }).compileComponents();\n    // Inject the http service and test controller for each test\n    httpClient = TestBed.inject(HttpClient);\n    httpTestingController = TestBed.inject(HttpTestingController);\n\n    fixture = TestBed.createComponent(UsersComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it(\"should create\", () => {\n    expect(component).toBeTruthy();\n  });\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IAAAA;AAAA,IAAAC,wBAAA;AAAA;AAAA,IAAAD,2BAAA;AAAA;AAAA;;;gCCWa;;;;;;AAXb;AACA;AAGA;;;;;;;;;;AAOO,IAAM,kBAAN,WAAoB;MAIzB,YAAoB,gBAA8B;AAA9B,aAAA,iBAAA;AAHpB,aAAA,QAAmB,CAAA;AACnB,aAAA,UAAU;MAE2C;MACrD,YAAY,SAAsB;AAChC,aAAK,eAAe,OAAM,EAAG,UAAU;UACrC,MAAM,CAAC,SAAa;AAClB,iBAAK,QAAQ;AACb,oBAAQ,IAAI,4BAA4B,KAAK,KAAK;UACpD;UACA,OAAO,CAAC,QAAa,QAAQ,MAAM,GAAG;UACtC,UAAU,MAAO,KAAK,UAAU;SACjC;MACH;;;OAdK;AAAM,qBAAc,WAAA;MAN1B,UAAU;QACT,UAAU;QACV,SAAS,CAAC,YAAY;QACtB,UAAA;;OAED;uCAKqC,cAAc,CAAA;OAJvC,cAAc;;;;;ACX3B;;;AAEA;AACA,IAAAE;AACA;AACA,IAAAC;AAEA,aAAS,kBAAkB,MAAK;AAC9B,UAAI;AACJ,UAAI;AACJ,UAAI;AACJ,UAAI;AAEJ,iBAAW,MAAW;AACpB,cAAM,QAAQ,uBAAuB;UACnC,SAAS,CAAC,cAAc;UACxB,WAAW,CAAC,cAAc;SAC3B,EAAE,kBAAiB;AAEpB,qBAAa,QAAQ,OAAO,UAAU;AACtC,gCAAwB,QAAQ,OAAO,qBAAqB;AAE5D,kBAAU,QAAQ,gBAAgB,cAAc;AAChD,oBAAY,QAAQ;AACpB,gBAAQ,cAAa;MACvB,EAAC;AAED,SAAG,iBAAiB,MAAK;AACvB,eAAO,SAAS,EAAE,WAAU;MAC9B,CAAC;IACH,CAAC;;;",
  "names": ["users_component_default", "init_users_component", "init_testing", "init_users_component"]
}
